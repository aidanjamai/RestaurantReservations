


<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (isAuthorized)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Restaurant">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Restaurant
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Reservation">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Reservation
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Review">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Review
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </li>

        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Register">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Register
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isAuthorized = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;

    }
    protected override void OnInitialized()
    {
        AuthorizationService.IsAuthorized.Subscribe(isAuthorized =>
        {
            this.isAuthorized = isAuthorized;
            StateHasChanged();
        });
        
    }
}
